name: CI - With Fastlane

env:
    GITHUB_TOKEN: ${{secrets.PAT_GITHUB}}
    COCOA_POD_TOKEN: ${{secrets.COCOAPODS_TRUNK_TOKEN}}
    GITHUB_BUILD_NUMBER: ${{ github.run_number }}
    GITHUB_BUILD_BRANCH: ${{ github.ref_name }}

permissions:
  contents: read
  actions: read
  checks: write

on:
  workflow_dispatch:
  push:
    branches:
      - '**'
    tags-ignore:
      - '**'
    paths-ignore:
      - "**.podspec"
  schedule:
    - cron: '0 1 * * 1' # This cron expression means "At 01:00 on Monday"

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref_name != 'development' }}

jobs:
  job1:
     name: 'ðŸŒ± Seed Workflow Config ðŸŒ±'
     runs-on: macos-latest
     outputs:
      matrix: ${{ steps.readjson.outputs.config-content }}
     steps:

      - name: Checkout Project Repository
        uses: actions/checkout@main
        with:
          repository: ${{ inputs.repository }}
          ref: ${{ inputs.ref }}
          token: ${{ secrets.PAT_GITHUB }}

      - name: Validate Build Configuration
        id: readjson
        uses: awasthi027/validate-workflow-config-action@v1
        with: 
          config-path: './.github/ci-configuration/ci.json'
  job2:
    needs: [job1]
    runs-on: macos-latest
    strategy:
        fail-fast: false
        matrix: 
          build: ${{ fromJson(needs.job1.outputs.matrix).build }}
          common: ${{ fromJson(needs.job1.outputs.matrix).common }}

    steps:
    - run: echo ${{ matrix.fastlane }}
    - run: echo ${{ matrix.type }}

  # call-build:
  #   name: 'Build'
  #   needs: [prepare]
  #   uses: ./.github/workflows/main-prebuild.yml
  #   with:
  #     config: ${{ needs.prepare.outputs.matrix }}
  #     repository: ${{ inputs.repository }}
  #     ref: ${{ inputs.ref }}
  #   secrets: inherit

# jobs:
#     PodLibLint:
#       name: 'Pod Lib Lint'
#       uses: ./.github/workflows/ci-pr.yml
#       with:
#         config_path: './.github/ci-configuration/ci.json'
#       secrets: inherit






# jobs:
#   job1:
#     runs-on: [macos-latest]
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     steps:
#     - id: set-matrix
#       run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\", \"build\":{\"projectKey\":\"Ashish=======\",\"testKey\":\"test\"}},{\"project\":\"bar\",\"config\":\"Release\"}]}"
#   job2:
#     needs: job1
#     runs-on: [macos-latest]
#     strategy:
#       matrix: ${{fromJson(needs.job1.outputs.matrix)}}
#     steps:
#     - run: echo ${{ matrix.project }}
#     - run: echo ${{ matrix.config }}
#     - run: echo ${{ matrix.build.projectKey}}
